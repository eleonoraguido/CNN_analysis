This program reads a .npz file, previously created by merging together the data of interest 
from two different particle species (generally photons and protons).

Two different tasks can be performed depending on the configuration file type:
-A CNN model is defined, trained and tested.
-A CNN model is loaded and tested.

** Define, create and test a model **
In order to define, create and test a model, use the *config.json* file
Some arguments can be passed:
    -Path to the input file + input file name (the simulations)
    -Additional information to be printed in the output file name
    -Partitioning method (and corresponding partitioning parameter): 
        1) "k_fold" : perform a k-fold cross validation by training k models
                        the partitioning parameter is k. It has to be > 1
        2) "split" : only one model is trained
                        the partitioning parameter is test data set fraction (fraction of the data set that won't be used for training). It has to be <= 1
    -Number of epochs
    -Batch size
    -Regularizer parameter L1 (penalty applied to absolute value of weights, 0-0.1)
    -Regularizer parameter L2 (penalty applied to square of weights, 0-0.1)
    -Selected threshold is the value used to compute the background rejection (it is just a placeholder, it will be computed again at 50% signal efficiency)

** Load and test an existing model **
In order to load and test an existing model, use the *config_load_model.json* file
Some arguments can be passed:
    -Path to the input file + input file name (the simulations)
    -Fraction of the data set that won't be used for training (test data set fraction)
    -Name of the model without extension (two files should exist: .h5 and .json)
    -Selected threshold is the value used to compute the background rejection 


Where the PLOTS are created?
Several pdfs are produced when the script is run (both if the model is created or loaded). The pdfs should NOT be saved in the git repository. The path to the directory where the pdfs will be saved can be changed in config.py (PDF_SAVE_PATH).


How to run the program locally:
source activate_env.sh
python3 main.py <config_file>


